<wiki:toc max_depth="2" />

= Introduction =

Let's begin by implementing a tiny application that shows a greeting message to visitors.

Here we use JavaScript to implement this application. There are other alternatives:

    * [Hello_World_With_XML With XML].

= Creating a HTML page =

First, create a file named helloworld.html, and give it the following contents. We assume all required ZK CSS and JavaScript files reside in the subdirectory named css and js, respectively. 

{{{
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>Hello, World!</title>
<link rel="stylesheet" type="text/css" href="css/zk.css"/><!-- ZK CSS -->
<script type="text/javascript" src="js/zk-all.js" charset="UTF-8">
</script><!-- ZK Widget library -->
<script type="text/javascript" src="js/lang.js" charset="UTF-8">
</script><!-- Locale-dependent messages -->
</head>
<body>
	<div id="main"><!-- an anchor -->
	</div>
	<script>
	jq('#main').replaceWith(new zul.wgt.Div({
		children: [
		new zul.wgt.Label({value: "What's your name? "}),
		new zul.inp.Textbox({
			onOK: function () {
				this.parent.appendChild(
					new zul.wgt.Separator());
				this.parent.appendChild(
					new zul.wgt.Label({value: 'Hello, '+this.getValue()}));
			}
		})]
	})); //create widgets and replace the anchor with them
	</script>
</body>
</html>
}}}

From top to bottom, this HTML page does the following.

    * Loads the ZK CSS file, zk.css.
    * Loads the ZK JavaScript files, zk-all.js and lang.js.
          o zk-all.js contains all available widgets. To minimize the traffic, you can load only the required packages by specifying them one-by-one.
          o lang.js contains messages in English. You can choose any of the available translations, or provide your own. 
    * Provides an anchor to replace with ZK widgets that will be created later. The anchor is usually a DIV tag, though it could be anything.
    * Provides the application-specific JavaScript codes. In this example, it creates the widgets to prompt the user for entering his name, and then, say hello to him when he presses ENTER.
          o To replace the anchor with ZK widget, use the `replaceWith` method of [http://www.zkoss.org/javadoc/latest/jsdoc/_global_/jq.html jQuery].

= Testing the Application =

ZKuery doesn't assume anything about the server, so you can test it by browsing to the HTML page directly. Assume the file reside in the directory named c:\zkuery\test. Then, you can test it by entering the following URL.
{{{
file:///C:/zkuery/test/helloworld.html
}}}

Then, you can type in your name and press ENTER to see how it says Hello to you. 